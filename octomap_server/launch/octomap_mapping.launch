<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<env name="ROSCONSOLE_CONFIG_FILE" value="$(find octomap_server)/cfg/rosconsole.conf"/>

	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
		<param name="/use_sim_time" value="true" />

		<param name="resolution" value="0.05" />
		<param name="base_frame_id" type="string" value="base_link" />	
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />
		
		<param name="base_frame_bbx_size" value="0.5" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/octomap_tof_left/cloud_in" />
	
	</node>
</launch>
